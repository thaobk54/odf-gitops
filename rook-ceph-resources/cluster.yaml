apiVersion: ceph.rook.io/v1
kind: CephCluster
metadata:
  name: rook-ceph
  namespace: openshift-storage
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  cephVersion:
    allowUnsupported: false
    image: quay.io/ceph/ceph:v19.2.3
  cleanupPolicy:
    allowUninstallWithVolumes: false
    confirmation: ""
    sanitizeDisks:
      dataSource: zero
      iteration: 1
      method: quick
    wipeDevicesFromOtherClusters: false
  continueUpgradeAfterChecksEvenIfNotHealthy: false
  crashCollector:
    disable: false
  csi:
    cephfs: {}
    readAffinity:
      enabled: false
  dashboard:
    enabled: true
    ssl: true
  dataDirHostPath: /var/lib/rook
  disruptionManagement:
    managePodBudgets: true
    osdMaintenanceTimeout: 30
  healthCheck:
    daemonHealth:
      mon:
        disabled: false
        interval: 45s
      osd:
        disabled: false
        interval: 60s
      status:
        disabled: false
        interval: 60s
    livenessProbe:
      mgr:
        disabled: false
      mon:
        disabled: false
      osd:
        disabled: false
    startupProbe:
      mgr:
        disabled: false
      mon:
        disabled: false
      osd:
        disabled: false
  logCollector:
    enabled: true
    maxLogSize: 500M
    periodicity: daily
  mgr:
    allowMultiplePerNode: false
    count: 3
    modules:
      - enabled: true
        name: rook
    volumeMounts:
      - name: tmp-dir
        mountPath: /tmp
    volumes:
      - name: tmp-dir
        emptyDir: {}
  mon:
    allowMultiplePerNode: false
    count: 3
  monitoring:
    enabled: false
    exporter:
      perfCountersPrioLimit: 5
      statsPeriodSeconds: 5
    metricsDisabled: false
  network:
    connections:
      compression:
        enabled: false
      encryption:
        enabled: false
      requireMsgr2: false
  placement:
    all:
      securityContext:
        privileged: true
        runAsUser: 0
    mgr:
      securityContext:
        privileged: true
        runAsUser: 0
        volumeMounts:
          - name: tmp-dir
            mountPath: /tmp
        volumes:
          - name: tmp-dir
            emptyDir: {}
    mon:
      securityContext:
        privileged: true
        runAsUser: 0
    osd:
      securityContext:
        privileged: true
        runAsUser: 0
    crashcollector:
      securityContext:
        privileged: true
        runAsUser: 0
    exporter:
      securityContext:
        privileged: true
        runAsUser: 0
  priorityClassNames:
    mgr: system-cluster-critical
    mon: system-node-critical
    osd: system-node-critical
  removeOSDsIfOutAndSafeToRemove: false
  skipUpgradeChecks: false
  storage:
    allowDeviceClassUpdate: false
    allowOsdCrushWeightUpdate: false
    useAllDevices: true
    useAllNodes: true
  upgradeOSDRequiresHealthyPGs: false
  waitTimeoutForHealthyOSDInMinutes: 10
